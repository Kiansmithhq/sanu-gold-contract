{
  "contracts": {
    "SanuGold": {
      "address": "0x6eD79Aa1c71FD7BdBC515EfdA3Bd4e26394435cC",
      "constructorCode": "608060405234801561001057600080fd5b50614977806100206000396000f3fe",
      "bodyBytecodeHash": "4888ceb6e040f5ae99fa11ddb49cc8286b00e5462571515ba789b4d21b53f34b",
      "localBytecodeHash": "d82ddc4d0d44d09b3bd69a84bbfe7de04609f4313da450c43e424832e25afbce",
      "deployedBytecodeHash": "d82ddc4d0d44d09b3bd69a84bbfe7de04609f4313da450c43e424832e25afbce",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_struct<AccessControlUpgradeSafe.RoleData>": {
          "id": "t_struct<AccessControlUpgradeSafe.RoleData>",
          "kind": "struct",
          "label": "AccessControlUpgradeSafe.RoleData",
          "members": [
            {
              "label": "members",
              "astId": 568,
              "type": "t_struct<EnumerableSet.AddressSet>",
              "src": "1655:32:3"
            },
            {
              "label": "adminRole",
              "astId": 570,
              "type": "t_bytes32",
              "src": "1697:17:3"
            }
          ]
        },
        "t_struct<EnumerableSet.AddressSet>": {
          "id": "t_struct<EnumerableSet.AddressSet>",
          "kind": "struct",
          "label": "EnumerableSet.AddressSet",
          "members": [
            {
              "label": "_inner",
              "astId": 2218,
              "type": "t_struct<EnumerableSet.Set>",
              "src": "4644:10:11"
            }
          ]
        },
        "t_struct<EnumerableSet.Set>": {
          "id": "t_struct<EnumerableSet.Set>",
          "kind": "struct",
          "label": "EnumerableSet.Set",
          "members": [
            {
              "label": "_values",
              "astId": 2034,
              "type": "t_array:dyn<t_bytes32>",
              "src": "1213:17:11"
            },
            {
              "label": "_indexes",
              "astId": 2038,
              "type": "t_mapping<t_uint256>",
              "src": "1364:37:11"
            }
          ]
        },
        "t_bytes32": {
          "id": "t_bytes32",
          "kind": "elementary",
          "label": "bytes32"
        },
        "t_array:dyn<t_bytes32>": {
          "id": "t_array:dyn<t_bytes32>",
          "valueType": "t_bytes32",
          "length": "dyn",
          "kind": "array",
          "label": "bytes32[]"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_mapping<t_struct<AccessControlUpgradeSafe.RoleData>>": {
          "id": "t_mapping<t_struct<AccessControlUpgradeSafe.RoleData>>",
          "valueType": "t_struct<AccessControlUpgradeSafe.RoleData>",
          "label": "mapping(key => AccessControlUpgradeSafe.RoleData)",
          "kind": "mapping"
        },
        "t_array:49<t_uint256>": {
          "id": "t_array:49<t_uint256>",
          "valueType": "t_uint256",
          "length": "49",
          "kind": "array",
          "label": "uint256[49]"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_array:44<t_uint256>": {
          "id": "t_array:44<t_uint256>",
          "valueType": "t_uint256",
          "length": "44",
          "kind": "array",
          "label": "uint256[44]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "node_modules/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 462,
          "type": "t_bool",
          "src": "757:24:2"
        },
        {
          "contract": "Initializable",
          "path": "node_modules/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 465,
          "type": "t_bool",
          "src": "876:25:2"
        },
        {
          "contract": "Initializable",
          "path": "node_modules/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 530,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:2"
        },
        {
          "contract": "ContextUpgradeSafe",
          "path": "node_modules/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol",
          "label": "__gap",
          "astId": 455,
          "type": "t_array:50<t_uint256>",
          "src": "1277:25:1"
        },
        {
          "contract": "AccessControlUpgradeSafe",
          "path": "node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol",
          "label": "_roles",
          "astId": 575,
          "type": "t_mapping<t_struct<AccessControlUpgradeSafe.RoleData>>",
          "src": "1727:44:3"
        },
        {
          "contract": "AccessControlUpgradeSafe",
          "path": "node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol",
          "label": "__gap",
          "astId": 820,
          "type": "t_array:49<t_uint256>",
          "src": "6927:25:3"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_balances",
          "astId": 1230,
          "type": "t_mapping<t_uint256>",
          "src": "1481:46:6"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_allowances",
          "astId": 1236,
          "type": "t_mapping<t_uint256>",
          "src": "1534:69:6"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_totalSupply",
          "astId": 1238,
          "type": "t_uint256",
          "src": "1610:28:6"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_name",
          "astId": 1240,
          "type": "t_string",
          "src": "1645:20:6"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_symbol",
          "astId": 1242,
          "type": "t_string",
          "src": "1671:22:6"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_decimals",
          "astId": 1244,
          "type": "t_uint8",
          "src": "1699:23:6"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "__gap",
          "astId": 1739,
          "type": "t_array:44<t_uint256>",
          "src": "11045:25:6"
        },
        {
          "contract": "ERC20BurnableUpgradeSafe",
          "path": "node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol",
          "label": "__gap",
          "astId": 1820,
          "type": "t_array:50<t_uint256>",
          "src": "1443:25:7"
        },
        {
          "contract": "PausableUpgradeSafe",
          "path": "node_modules/@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol",
          "label": "_paused",
          "astId": 2444,
          "type": "t_bool",
          "src": "825:20:12"
        },
        {
          "contract": "PausableUpgradeSafe",
          "path": "node_modules/@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol",
          "label": "__gap",
          "astId": 2533,
          "type": "t_array:49<t_uint256>",
          "src": "2073:25:12"
        },
        {
          "contract": "ERC20PausableUpgradeSafe",
          "path": "node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Pausable.sol",
          "label": "__gap",
          "astId": 1885,
          "type": "t_array:50<t_uint256>",
          "src": "1130:25:8"
        },
        {
          "contract": "ERC20PresetMinterPauserUpgradeSafe",
          "path": "node_modules/@openzeppelin/contracts-ethereum-package/contracts/presets/ERC20PresetMinterPauser.sol",
          "label": "__gap",
          "astId": 1205,
          "type": "t_array:50<t_uint256>",
          "src": "3454:25:5"
        },
        {
          "contract": "SanuGold",
          "path": "contracts/SNG.sol",
          "label": "feeRate",
          "astId": 15,
          "type": "t_uint256",
          "src": "698:22:0"
        },
        {
          "contract": "SanuGold",
          "path": "contracts/SNG.sol",
          "label": "feeController",
          "astId": 17,
          "type": "t_address",
          "src": "726:28:0"
        },
        {
          "contract": "SanuGold",
          "path": "contracts/SNG.sol",
          "label": "feeRecipient",
          "astId": 19,
          "type": "t_address",
          "src": "760:27:0"
        },
        {
          "contract": "SanuGold",
          "path": "contracts/SNG.sol",
          "label": "owner",
          "astId": 21,
          "type": "t_address",
          "src": "793:20:0"
        },
        {
          "contract": "SanuGold",
          "path": "contracts/SNG.sol",
          "label": "frozen",
          "astId": 25,
          "type": "t_mapping<t_bool>",
          "src": "819:40:0"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "AccessControlUpgradeSafe",
            "path": "node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol",
            "label": "_roles",
            "astId": 575,
            "type": "t_mapping<t_struct<AccessControlUpgradeSafe.RoleData>>",
            "src": "1727:44:3"
          }
        ],
        "storageDiff": []
      }
    }
  },
  "solidityLibs": {},
  "proxies": {
    "SANU gold/SanuGold": [
      {
        "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
        "version": "0.1.0",
        "implementation": "0x6eD79Aa1c71FD7BdBC515EfdA3Bd4e26394435cC",
        "admin": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",
        "kind": "Upgradeable"
      }
    ]
  },
  "manifestVersion": "2.2",
  "version": "0.1.0",
  "proxyAdmin": {
    "address": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24"
  }
}
